plugins {
    id 'java'
    //spring ai 때문에 3.5.0 -> 3.2.5로 변경
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
springBoot {
    mainClass = 'org.example.demo3.Demo3Application' // ← 너의 실제 main 클래스 전체 경로로 수정
}

repositories {
    mavenCentral()

    // ✅ 추가: Spring Milestone Repository
    // Spring AI 릴리즈 및 마일스톤 저장소
    maven { url "https://repo.spring.io/release" }
    maven { url "https://repo.spring.io/milestone" }
}

dependencies {

    //챗봇 위한 웹소켓
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // ✅ Spring AI 핵심
    implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter:1.0.0-M2'

    // ✅ JSON 바인딩용 (DTO → JSON)
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // ✅ 비동기 처리용 (선택)
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    //회원가입 안 돼서 일단 추가해 봄
    // ✅ Bean Validation (javax or jakarta)
    implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final' // 또는 최신 버전

    // 아래도 함께 추천
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

    //security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    //jwt(인증)
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    //엑셀 파싱을 위한 EasyExcel
    implementation 'com.alibaba:easyexcel:3.3.2'

    //Thumbnailator 이미지 리사이징
    implementation 'net.coobird:thumbnailator:0.4.19'
    //TwelveMonkeys ImageIO WebP 변환
    // ✅ TwelveMonkeys (버전 3.9.4)
    implementation 'com.twelvemonkeys.imageio:imageio-core:3.9.4'
    implementation 'com.twelvemonkeys.imageio:imageio-jpeg:3.9.4'
    implementation 'com.twelvemonkeys.imageio:imageio-webp:3.9.4'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'io.github.cdimascio:dotenv-java:3.0.0'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // test에서 lombok 사용
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // dotenv
    implementation 'io.github.cdimascio:java-dotenv:5.1.1'

    // swagger
    //spring ai 때문에 2.7.0 -> 2.3.0
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    //S3
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.696'

    // QueryDSL - jakarta 버전 사용 (Spring Boot 3.x 호환)
    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"

    // JPA Annotation processor for Q 클래스 생성
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

}

def querydslDir = "src/main/generated"

sourceSets {
    main {
        java {
            srcDirs = ["src/main/java", querydslDir]
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.generatedSourceOutputDirectory = file(querydslDir)
}

tasks.named('test') {
    useJUnitPlatform()
}
